
services:
  redis_instance_2:
    image: redis:7-alpine
    container_name: redis_instance_2
    ports:
      - "6380:6379"
    volumes:
      - redis_data_instance_2:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - autoletras_instance_2

  backend_instance_2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_instance_2
    ports:
      - "8001:8000"
    volumes:
      - ./data/instance_2:/app/data
      - ./backend:/app/backend
      - ./frontend:/app/frontend
    env_file:
      - .env.instance_2
    environment:
      - REDIS_HOST=redis_instance_2
      - REDIS_PORT=6379
      - PORT=8000
      - INSTANCE_ID=2
      - PYTHONPATH=/app
    depends_on:
      redis_instance_2:
        condition: service_healthy
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - autoletras_instance_2

  worker_instance_2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: worker_instance_2
    volumes:
      - ./data/instance_2:/app/data
      - ./backend:/app/backend
    env_file:
      - .env.instance_2
    environment:
      - REDIS_HOST=redis_instance_2
      - REDIS_PORT=6379
      - INSTANCE_ID=2
      - PYTHONPATH=/app
    depends_on:
      redis_instance_2:
        condition: service_healthy
    command: celery -A backend.celery_worker:celery_app worker --loglevel=info --pool=threads --concurrency=3
    networks:
      - autoletras_instance_2

volumes:
  redis_data_instance_2:

networks:
  autoletras_instance_2:
    driver: bridge
